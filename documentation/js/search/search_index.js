var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ApiResponse.html",[0,0.299,1,0.847]],["body/interfaces/ApiResponse.html",[0,0.474,1,1.076,2,0.854,3,0.373,4,0.321,5,0.321,6,1.306,7,0.373,8,0.966,9,2.562,10,2.562,11,2.495,12,0.787,13,0.04,14,2.365,15,0.687,16,1.829,17,1.652,18,1.652,19,1.829,20,1.652,21,0.69,22,1.076,23,1.652,24,1.829,25,1.652,26,1.652,27,0.948,28,0.026,29,0.026]],["title/modules/AppModule.html",[30,1.613,31,1.822]],["body/modules/AppModule.html",[3,0.429,4,0.369,5,0.369,13,0.039,15,0.429,28,0.028,29,0.028,30,2.544,31,3.293,32,1.683,33,1.683,34,2.173,35,2.173,36,1.683,37,2.173,38,2.173,39,2.538,40,2.538,41,2.917,42,2.912,43,2.173,44,2.173,45,3.091,46,3.401,47,1.317,48,1.683,49,3.091,50,0.633]],["title/classes/BaseRepository.html",[50,0.607,51,2.083]],["body/classes/BaseRepository.html",[1,0.488,3,0.237,4,0.204,5,0.204,7,0.237,9,0.93,10,0.93,12,0.823,13,0.039,14,1.806,15,0.237,22,1.383,27,1.327,28,0.018,29,0.018,47,0.853,50,0.349,51,1.887,52,0.93,53,1.401,54,1.65,55,1.806,56,1.304,57,3.275,58,1.887,59,1.887,60,1.887,61,1.887,62,1.887,63,2.684,64,3.051,65,1.782,66,1.707,67,2.514,68,2.514,69,1.987,70,2.643,71,1.987,72,2.696,73,2.684,74,1.707,75,1.806,76,2.684,77,1.707,78,1.05,79,1.401,80,2.684,81,1.707,82,2.684,83,1.707,84,1.05,85,1.401,86,2.643,87,1.707,88,3.317]],["title/interfaces/Field.html",[0,0.299,21,0.761]],["body/interfaces/Field.html",[0,0.409,2,0.952,3,0.415,4,0.357,5,0.357,7,0.415,8,1.041,11,1.97,12,0.833,13,0.039,15,0.563,21,1.041,22,1.552,28,0.028,29,0.028,75,2.803,89,2.104,90,4.044,91,4.044,92,3.029,93,2.457,94,2.457]],["title/interfaces/FieldLocation.html",[0,0.299,92,1.822]],["body/interfaces/FieldLocation.html",[0,0.409,2,0.952,3,0.415,4,0.357,5,0.357,7,0.415,8,1.041,11,2.579,12,0.833,13,0.039,15,0.563,21,0.769,22,1.472,28,0.028,29,0.028,75,2.803,89,2.104,90,2.457,91,2.457,92,2.826,93,4.044,94,4.044]],["title/controllers/FieldsController.html",[95,1.822,96,1.822]],["body/controllers/FieldsController.html",[1,1.047,3,0.359,4,0.308,5,0.308,7,0.359,12,0.664,13,0.04,15,0.359,21,0.664,28,0.025,29,0.025,47,1.552,48,1.407,50,0.529,56,1.779,57,2.614,65,1.126,71,1.256,72,1.994,84,1.589,86,1.817,95,1.589,96,2.251,97,2.122,98,2.122,99,2.584,100,2.584,101,3.796,102,2.584,103,2.584,104,2.584,105,1.589,106,2.315,107,2.122,108,3.661,109,2.584,110,2.122,111,2.584,112,2.584,113,2.584,114,1.817,115,2.584,116,2.584,117,2.122,118,2.122,119,1.817,120,2.584]],["title/modules/FieldsModule.html",[30,1.613,41,1.613]],["body/modules/FieldsModule.html",[3,0.391,4,0.336,5,0.336,13,0.039,15,0.391,28,0.026,29,0.026,30,2.424,32,1.533,33,1.533,34,1.979,35,1.979,36,1.533,37,3.129,38,1.979,41,2.836,42,2.732,43,1.979,44,1.979,46,2.311,47,1.526,48,1.533,50,0.576,96,2.737,97,3.191,106,2.117,107,2.311,121,2.311,122,2.311,123,2.836,124,2.815,125,2.815,126,2.815]],["title/classes/FieldsRepository.html",[50,0.607,127,2.083]],["body/classes/FieldsRepository.html",[1,0.676,3,0.328,4,0.282,5,0.282,7,0.328,8,0.882,12,0.855,13,0.039,15,0.328,21,0.607,22,1.157,27,1.212,28,0.023,29,0.023,47,1.286,50,0.484,52,1.288,54,2.112,58,2.844,59,2.844,60,2.844,61,2.844,62,2.844,64,2.415,65,2.055,70,2.415,72,2.568,75,2.203,78,1.454,84,1.454,105,1.454,127,2.415,128,1.941,129,2.203,130,3.315,131,2.365,132,2.365,133,2.365,134,2.365,135,2.365,136,1.941]],["title/classes/FieldsService.html",[50,0.607,106,1.613]],["body/classes/FieldsService.html",[1,0.743,3,0.361,4,0.31,5,0.31,7,0.361,12,0.773,13,0.039,15,0.361,21,0.667,27,1.636,28,0.025,29,0.025,47,1.355,50,0.532,52,1.415,56,1.786,57,2.622,65,1.602,67,2.26,68,2.26,69,1.786,71,1.263,72,2.001,78,2.26,79,2.133,84,1.598,86,1.827,101,3.501,105,1.598,106,2.001,117,2.133,118,2.133,119,1.827,129,2.524,136,2.133,137,2.133,138,2.599,139,2.599,140,2.599,141,3.017,142,2.599,143,2.599,144,2.599]],["title/interfaces/FilterParams.html",[0,0.299,24,1.44]],["body/interfaces/FilterParams.html",[0,0.478,1,0.782,2,0.869,3,0.379,4,0.326,5,0.326,6,1.329,7,0.379,8,0.978,9,1.489,10,1.489,11,2.304,12,0.86,13,0.04,14,1.489,15,0.692,16,1.851,17,1.681,18,1.681,19,1.851,20,1.681,21,0.702,22,1.089,23,1.681,24,2.13,25,2.915,26,1.681,27,0.965,28,0.026,29,0.026,69,1.851,145,3.127]],["title/interfaces/IBaseRepository.html",[0,0.299,55,1.613]],["body/interfaces/IBaseRepository.html",[0,0.256,1,0.727,2,0.808,3,0.353,4,0.303,5,0.303,7,0.353,8,0.929,12,0.88,13,0.039,15,0.353,22,1.205,27,1.277,28,0.025,29,0.025,47,0.808,55,1.971,58,3.227,59,3.227,60,3.227,61,3.227,62,3.227,64,2.544,70,2.544,72,2.642,75,2.294,78,1.563,130,3.847,146,2.087,147,2.543]],["title/interfaces/IFieldsRepository.html",[0,0.299,129,1.613]],["body/interfaces/IFieldsRepository.html",[0,0.373,2,1.175,3,0.513,4,0.441,5,0.441,13,0.039,15,0.513,21,0.949,28,0.032,29,0.032,47,1.479,55,2.772,85,3.034,105,2.272,129,2.533,148,3.034,149,3.819]],["title/interfaces/ILoggerRepository.html",[0,0.299,150,1.822]],["body/interfaces/ILoggerRepository.html",[0,0.284,2,0.895,3,0.391,4,0.336,5,0.336,7,0.391,8,1.337,12,0.705,13,0.037,15,0.391,22,1.273,28,0.026,29,0.026,56,1.889,65,1.694,67,2.39,68,2.39,69,1.889,71,1.889,150,2.39,151,2.311,152,3.191,153,3.191,154,3.191,155,4.276,156,2.815,157,2.311,158,3.941,159,3.191,160,3.941,161,2.815]],["title/classes/LoggerRepository.html",[50,0.607,162,2.083]],["body/classes/LoggerRepository.html",[3,0.34,4,0.292,5,0.292,7,0.34,8,1.348,12,0.639,13,0.039,15,0.34,22,1.18,28,0.024,29,0.024,47,0.779,50,0.502,52,1.334,54,2.167,56,1.713,65,1.536,67,2.167,68,2.167,69,1.713,71,1.713,150,2.538,152,2.894,153,2.894,154,2.894,155,4.088,157,2.894,158,3.706,159,2.894,160,4.088,162,2.478,163,2.012,164,2.45,165,2.45,166,2.45,167,2.45,168,3.525,169,2.45,170,2.45]],["title/interfaces/PaginationParams.html",[0,0.299,16,1.44]],["body/interfaces/PaginationParams.html",[0,0.474,1,0.768,2,0.854,3,0.373,4,0.321,5,0.321,6,1.306,7,0.373,8,0.966,9,1.463,10,1.463,11,2.614,12,0.787,13,0.04,14,1.463,15,0.687,16,2.11,17,2.893,18,2.893,19,1.829,20,1.652,21,0.69,22,1.076,23,1.652,24,1.829,25,1.652,26,1.652,27,0.948,28,0.026,29,0.026]],["title/injectables/PrismaService.html",[123,1.613,171,1.822]],["body/injectables/PrismaService.html",[3,0.435,4,0.374,5,0.374,7,0.435,13,0.039,15,0.435,28,0.028,29,0.028,47,1.328,48,1.706,50,0.641,54,1.926,56,2.031,57,2.892,65,1.365,71,1.522,119,2.202,123,2.276,149,3.431,171,2.57,172,3.132,173,2.571,174,4.703,175,5.377,176,3.132,177,2.571,178,3.132]],["title/interfaces/SortParams.html",[0,0.299,19,1.44]],["body/interfaces/SortParams.html",[0,0.478,1,0.782,2,0.869,3,0.379,4,0.326,5,0.326,6,1.329,7,0.379,8,0.978,9,1.489,10,1.489,11,2.304,12,0.86,13,0.04,14,1.489,15,0.692,16,1.851,17,1.681,18,1.681,19,2.13,20,2.915,21,0.702,22,1.089,23,1.681,24,1.851,25,1.681,26,1.681,27,0.965,28,0.026,29,0.026,69,1.851,145,3.127]],["title/coverage.html",[179,2.83]],["body/coverage.html",[0,0.529,1,0.647,5,0.27,6,2.113,12,0.41,13,0.039,16,1.1,19,1.1,21,0.581,24,1.1,28,0.023,29,0.023,36,1.232,50,0.89,51,1.591,53,1.858,55,1.232,89,2.338,92,1.391,95,1.391,96,1.391,98,1.858,106,1.232,123,1.232,127,1.591,128,1.858,129,1.232,130,1.591,137,1.858,146,1.858,148,1.858,150,1.391,151,1.858,162,1.591,163,1.858,171,1.391,173,1.858,179,1.591,180,2.263,181,2.263,182,2.263,183,5.65,184,4.633,185,4.348,186,3.326,187,3.326,188,3.944,189,1.858,190,2.263,191,2.263,192,2.263]],["title/dependencies.html",[33,1.938,193,2.039]],["body/dependencies.html",[13,0.04,28,0.03,29,0.03,33,1.894,48,1.894,50,0.916,110,2.855,177,2.855,194,4.949,195,3.478,196,3.478,197,3.478,198,3.478,199,3.478,200,3.478,201,3.478,202,3.478,203,3.478,204,3.478,205,3.478,206,3.478,207,3.478,208,3.478]],["title/miscellaneous/functions.html",[209,1.527,210,2.921]],["body/miscellaneous/functions.html",[7,0.586,13,0.034,28,0.034,29,0.034,36,2.941,189,3.467,209,2.597,210,3.467,211,4.224]],["title/index.html",[7,0.345,212,2.483,213,2.483]],["body/index.html",[4,0.284,13,0.039,28,0.023,29,0.023,114,1.671,141,1.951,179,1.671,214,2.377,215,2.377,216,3.448,217,2.377,218,2.377,219,2.377,220,2.377,221,2.377,222,2.377,223,4.057,224,2.377,225,2.377,226,2.377,227,4.057,228,5.084,229,2.377,230,2.377,231,2.377,232,4.928,233,2.377,234,2.377,235,3.448,236,2.377,237,2.377,238,2.377,239,2.377,240,3.448,241,3.448,242,2.377,243,2.377,244,2.377,245,3.448,246,3.448,247,2.377,248,2.377,249,2.377,250,2.377,251,2.377,252,1.951,253,2.377,254,2.377,255,2.377,256,2.377,257,2.377,258,2.377,259,2.377,260,2.377,261,2.377,262,2.377,263,1.951,264,2.377,265,2.377,266,2.377,267,2.377,268,2.377,269,2.377,270,1.951]],["title/modules.html",[32,2.192]],["body/modules.html",[13,0.034,28,0.034,29,0.034,31,2.529,32,2.24,41,2.24,252,4.08,271,4.97,272,4.97,273,4.97]],["title/overview.html",[274,3.304]],["body/overview.html",[2,1.044,13,0.035,28,0.029,29,0.029,30,1.789,31,3.143,32,1.789,33,1.789,34,2.309,35,2.309,36,1.789,37,2.309,38,2.309,39,2.696,40,2.696,41,2.891,42,3.031,43,2.309,44,2.309,52,1.789,95,2.02,121,2.696,122,2.696,123,2.622,171,2.02,274,2.696,275,3.285,276,4.312,277,3.285,278,3.285]],["title/properties.html",[8,0.914,193,2.039]],["body/properties.html",[8,1.056,13,0.039,28,0.034,29,0.034,114,2.892,263,3.377,270,3.377,279,4.113,280,4.113,281,4.113]],["title/miscellaneous/typealiases.html",[209,1.527,282,3.558]],["body/miscellaneous/typealiases.html",[6,2.053,7,0.586,12,0.766,13,0.034,27,1.782,28,0.034,29,0.034,209,2.597,283,4.224,284,4.224]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"interfaces/ApiResponse.html":{},"modules/AppModule.html":{},"classes/BaseRepository.html":{},"interfaces/Field.html":{},"interfaces/FieldLocation.html":{},"controllers/FieldsController.html":{},"modules/FieldsModule.html":{},"classes/FieldsRepository.html":{},"classes/FieldsService.html":{},"interfaces/FilterParams.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IFieldsRepository.html":{},"interfaces/ILoggerRepository.html":{},"classes/LoggerRepository.html":{},"interfaces/PaginationParams.html":{},"injectables/PrismaService.html":{},"interfaces/SortParams.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":183,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":280,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":203,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":206,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":201,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":187,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":185,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":184,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":186,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":188,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":276,"title":{},"body":{"overview.html":{}}}],["10.0.0",{"_index":194,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":87,"title":{},"body":{"classes/BaseRepository.html":{}}}],["2",{"_index":275,"title":{},"body":{"overview.html":{}}}],["4",{"_index":277,"title":{},"body":{"overview.html":{}}}],["5.10.2",{"_index":199,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":198,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":208,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":278,"title":{},"body":{"overview.html":{}}}],["aliases",{"_index":283,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":253,"title":{},"body":{"index.html":{}}}],["apiresponse",{"_index":1,"title":{"interfaces/ApiResponse.html":{}},"body":{"interfaces/ApiResponse.html":{},"classes/BaseRepository.html":{},"controllers/FieldsController.html":{},"classes/FieldsRepository.html":{},"classes/FieldsService.html":{},"interfaces/FilterParams.html":{},"interfaces/IBaseRepository.html":{},"interfaces/PaginationParams.html":{},"interfaces/SortParams.html":{},"coverage.html":{}}}],["apiresponseswagger",{"_index":108,"title":{},"body":{"controllers/FieldsController.html":{}}}],["apitags",{"_index":109,"title":{},"body":{"controllers/FieldsController.html":{}}}],["apitags('fields",{"_index":111,"title":{},"body":{"controllers/FieldsController.html":{}}}],["app",{"_index":230,"title":{},"body":{"index.html":{}}}],["applications",{"_index":222,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":31,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":57,"title":{},"body":{"classes/BaseRepository.html":{},"controllers/FieldsController.html":{},"classes/FieldsService.html":{},"injectables/PrismaService.html":{}}}],["author",{"_index":263,"title":{},"body":{"index.html":{},"properties.html":{}}}],["await",{"_index":119,"title":{},"body":{"controllers/FieldsController.html":{},"classes/FieldsService.html":{},"injectables/PrismaService.html":{}}}],["backers",{"_index":254,"title":{},"body":{"index.html":{}}}],["baserepository",{"_index":51,"title":{"classes/BaseRepository.html":{}},"body":{"classes/BaseRepository.html":{},"coverage.html":{}}}],["bootstrap",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/FieldsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":273,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":271,"title":{},"body":{"modules.html":{}}}],["building",{"_index":217,"title":{},"body":{"index.html":{}}}],["class",{"_index":50,"title":{"classes/BaseRepository.html":{},"classes/FieldsRepository.html":{},"classes/FieldsService.html":{},"classes/LoggerRepository.html":{}},"body":{"modules/AppModule.html":{},"classes/BaseRepository.html":{},"controllers/FieldsController.html":{},"modules/FieldsModule.html":{},"classes/FieldsRepository.html":{},"classes/FieldsService.html":{},"classes/LoggerRepository.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":52,"title":{},"body":{"classes/BaseRepository.html":{},"classes/FieldsRepository.html":{},"classes/FieldsService.html":{},"classes/LoggerRepository.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_fieldsmodule",{"_index":121,"title":{},"body":{"modules/FieldsModule.html":{},"overview.html":{}}}],["cluster_fieldsmodule_providers",{"_index":122,"title":{},"body":{"modules/FieldsModule.html":{},"overview.html":{}}}],["console.error",{"_index":170,"title":{},"body":{"classes/LoggerRepository.html":{}}}],["console.log",{"_index":167,"title":{},"body":{"classes/LoggerRepository.html":{}}}],["constructor",{"_index":138,"title":{},"body":{"classes/FieldsService.html":{}}}],["constructor(private",{"_index":117,"title":{},"body":{"controllers/FieldsController.html":{},"classes/FieldsService.html":{}}}],["constructor(repository",{"_index":139,"title":{},"body":{"classes/FieldsService.html":{}}}],["controller",{"_index":95,"title":{"controllers/FieldsController.html":{}},"body":{"controllers/FieldsController.html":{},"coverage.html":{},"overview.html":{}}}],["controller('fields",{"_index":116,"title":{},"body":{"controllers/FieldsController.html":{}}}],["controllers",{"_index":97,"title":{},"body":{"controllers/FieldsController.html":{},"modules/FieldsModule.html":{}}}],["count",{"_index":9,"title":{},"body":{"interfaces/ApiResponse.html":{},"classes/BaseRepository.html":{},"interfaces/FilterParams.html":{},"interfaces/PaginationParams.html":{},"interfaces/SortParams.html":{}}}],["coverage",{"_index":179,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":58,"title":{},"body":{"classes/BaseRepository.html":{},"classes/FieldsRepository.html":{},"interfaces/IBaseRepository.html":{}}}],["create(data",{"_index":63,"title":{},"body":{"classes/BaseRepository.html":{}}}],["data",{"_index":70,"title":{},"body":{"classes/BaseRepository.html":{},"classes/FieldsRepository.html":{},"interfaces/IBaseRepository.html":{}}}],["debug",{"_index":169,"title":{},"body":{"classes/LoggerRepository.html":{}}}],["declarations",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/FieldsModule.html":{},"overview.html":{}}}],["decorators",{"_index":102,"title":{},"body":{"controllers/FieldsController.html":{}}}],["defined",{"_index":65,"title":{},"body":{"classes/BaseRepository.html":{},"controllers/FieldsController.html":{},"classes/FieldsRepository.html":{},"classes/FieldsService.html":{},"interfaces/ILoggerRepository.html":{},"classes/LoggerRepository.html":{},"injectables/PrismaService.html":{}}}],["delete",{"_index":59,"title":{},"body":{"classes/BaseRepository.html":{},"classes/FieldsRepository.html":{},"interfaces/IBaseRepository.html":{}}}],["delete(id",{"_index":73,"title":{},"body":{"classes/BaseRepository.html":{}}}],["dependencies",{"_index":33,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/FieldsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":114,"title":{},"body":{"controllers/FieldsController.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":231,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":180,"title":{},"body":{"coverage.html":{}}}],["domain/entities/api",{"_index":84,"title":{},"body":{"classes/BaseRepository.html":{},"controllers/FieldsController.html":{},"classes/FieldsRepository.html":{},"classes/FieldsService.html":{}}}],["domain/entities/field",{"_index":105,"title":{},"body":{"controllers/FieldsController.html":{},"classes/FieldsRepository.html":{},"classes/FieldsService.html":{},"interfaces/IFieldsRepository.html":{}}}],["domain/interfaces/fields/ifieldsrepository",{"_index":136,"title":{},"body":{"classes/FieldsRepository.html":{},"classes/FieldsService.html":{}}}],["domain/interfaces/shared/ibaserepository",{"_index":85,"title":{},"body":{"classes/BaseRepository.html":{},"interfaces/IFieldsRepository.html":{}}}],["domain/interfaces/shared/iloggerrepository",{"_index":166,"title":{},"body":{"classes/LoggerRepository.html":{}}}],["domain/services/fields/fieldsservice",{"_index":107,"title":{},"body":{"controllers/FieldsController.html":{},"modules/FieldsModule.html":{}}}],["domain/services/prisma/prismaservice",{"_index":126,"title":{},"body":{"modules/FieldsModule.html":{}}}],["e2e",{"_index":242,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":218,"title":{},"body":{"index.html":{}}}],["entities/api",{"_index":147,"title":{},"body":{"interfaces/IBaseRepository.html":{}}}],["error",{"_index":160,"title":{},"body":{"interfaces/ILoggerRepository.html":{},"classes/LoggerRepository.html":{}}}],["example",{"_index":227,"title":{},"body":{"index.html":{}}}],["export",{"_index":15,"title":{},"body":{"interfaces/ApiResponse.html":{},"modules/AppModule.html":{},"classes/BaseRepository.html":{},"interfaces/Field.html":{},"interfaces/FieldLocation.html":{},"controllers/FieldsController.html":{},"modules/FieldsModule.html":{},"classes/FieldsRepository.html":{},"classes/FieldsService.html":{},"interfaces/FilterParams.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IFieldsRepository.html":{},"interfaces/ILoggerRepository.html":{},"classes/LoggerRepository.html":{},"interfaces/PaginationParams.html":{},"injectables/PrismaService.html":{},"interfaces/SortParams.html":{}}}],["exports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/FieldsModule.html":{},"overview.html":{}}}],["express",{"_index":197,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":149,"title":{},"body":{"interfaces/IFieldsRepository.html":{},"injectables/PrismaService.html":{}}}],["field",{"_index":21,"title":{"interfaces/Field.html":{}},"body":{"interfaces/ApiResponse.html":{},"interfaces/Field.html":{},"interfaces/FieldLocation.html":{},"controllers/FieldsController.html":{},"classes/FieldsRepository.html":{},"classes/FieldsService.html":{},"interfaces/FilterParams.html":{},"interfaces/IFieldsRepository.html":{},"interfaces/PaginationParams.html":{},"interfaces/SortParams.html":{},"coverage.html":{}}}],["fieldlocation",{"_index":92,"title":{"interfaces/FieldLocation.html":{}},"body":{"interfaces/Field.html":{},"interfaces/FieldLocation.html":{},"coverage.html":{}}}],["fields",{"_index":100,"title":{},"body":{"controllers/FieldsController.html":{}}}],["fields.controller",{"_index":125,"title":{},"body":{"modules/FieldsModule.html":{}}}],["fieldscontroller",{"_index":96,"title":{"controllers/FieldsController.html":{}},"body":{"controllers/FieldsController.html":{},"modules/FieldsModule.html":{},"coverage.html":{}}}],["fieldsmodule",{"_index":41,"title":{"modules/FieldsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FieldsModule.html":{},"modules.html":{},"overview.html":{}}}],["fieldsrepository",{"_index":127,"title":{"classes/FieldsRepository.html":{}},"body":{"classes/FieldsRepository.html":{},"coverage.html":{}}}],["fieldsservice",{"_index":106,"title":{"classes/FieldsService.html":{}},"body":{"controllers/FieldsController.html":{},"modules/FieldsModule.html":{},"classes/FieldsService.html":{},"coverage.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ApiResponse.html":{},"modules/AppModule.html":{},"classes/BaseRepository.html":{},"interfaces/Field.html":{},"interfaces/FieldLocation.html":{},"controllers/FieldsController.html":{},"modules/FieldsModule.html":{},"classes/FieldsRepository.html":{},"classes/FieldsService.html":{},"interfaces/FilterParams.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IFieldsRepository.html":{},"interfaces/ILoggerRepository.html":{},"classes/LoggerRepository.html":{},"interfaces/PaginationParams.html":{},"injectables/PrismaService.html":{},"interfaces/SortParams.html":{},"coverage.html":{}}}],["filterparams",{"_index":24,"title":{"interfaces/FilterParams.html":{}},"body":{"interfaces/ApiResponse.html":{},"interfaces/FilterParams.html":{},"interfaces/PaginationParams.html":{},"interfaces/SortParams.html":{},"coverage.html":{}}}],["filters",{"_index":25,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/FilterParams.html":{},"interfaces/PaginationParams.html":{},"interfaces/SortParams.html":{}}}],["framework",{"_index":216,"title":{},"body":{"index.html":{}}}],["function",{"_index":130,"title":{},"body":{"classes/FieldsRepository.html":{},"interfaces/IBaseRepository.html":{},"coverage.html":{}}}],["functions",{"_index":210,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getall",{"_index":60,"title":{},"body":{"classes/BaseRepository.html":{},"classes/FieldsRepository.html":{},"interfaces/IBaseRepository.html":{}}}],["getall(params",{"_index":76,"title":{},"body":{"classes/BaseRepository.html":{}}}],["getavailablefields",{"_index":101,"title":{},"body":{"controllers/FieldsController.html":{},"classes/FieldsService.html":{}}}],["getavailablefields(params",{"_index":142,"title":{},"body":{"classes/FieldsService.html":{}}}],["getbyid",{"_index":61,"title":{},"body":{"classes/BaseRepository.html":{},"classes/FieldsRepository.html":{},"interfaces/IBaseRepository.html":{}}}],["getbyid(id",{"_index":80,"title":{},"body":{"classes/BaseRepository.html":{}}}],["getting",{"_index":212,"title":{"index.html":{}},"body":{}}],["grow",{"_index":249,"title":{},"body":{"index.html":{}}}],["here",{"_index":260,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":267,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":104,"title":{},"body":{"controllers/FieldsController.html":{}}}],["httpstatus.ok",{"_index":113,"title":{},"body":{"controllers/FieldsController.html":{}}}],["ibaserepository",{"_index":55,"title":{"interfaces/IBaseRepository.html":{}},"body":{"classes/BaseRepository.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IFieldsRepository.html":{},"coverage.html":{}}}],["id",{"_index":75,"title":{},"body":{"classes/BaseRepository.html":{},"interfaces/Field.html":{},"interfaces/FieldLocation.html":{},"classes/FieldsRepository.html":{},"interfaces/IBaseRepository.html":{}}}],["identifier",{"_index":181,"title":{},"body":{"coverage.html":{}}}],["ifieldsrepository",{"_index":129,"title":{"interfaces/IFieldsRepository.html":{}},"body":{"classes/FieldsRepository.html":{},"classes/FieldsService.html":{},"interfaces/IFieldsRepository.html":{},"coverage.html":{}}}],["iloggerrepository",{"_index":150,"title":{"interfaces/ILoggerRepository.html":{}},"body":{"interfaces/ILoggerRepository.html":{},"classes/LoggerRepository.html":{},"coverage.html":{}}}],["implements",{"_index":54,"title":{},"body":{"classes/BaseRepository.html":{},"classes/FieldsRepository.html":{},"classes/LoggerRepository.html":{},"injectables/PrismaService.html":{}}}],["import",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseRepository.html":{},"controllers/FieldsController.html":{},"modules/FieldsModule.html":{},"classes/FieldsRepository.html":{},"classes/FieldsService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IFieldsRepository.html":{},"classes/LoggerRepository.html":{},"injectables/PrismaService.html":{}}}],["imports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/FieldsModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ApiResponse.html":{},"classes/BaseRepository.html":{},"interfaces/Field.html":{},"interfaces/FieldLocation.html":{},"controllers/FieldsController.html":{},"classes/FieldsRepository.html":{},"classes/FieldsService.html":{},"interfaces/FilterParams.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ILoggerRepository.html":{},"classes/LoggerRepository.html":{},"interfaces/PaginationParams.html":{},"injectables/PrismaService.html":{},"interfaces/SortParams.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ApiResponse.html":{},"modules/AppModule.html":{},"classes/BaseRepository.html":{},"interfaces/Field.html":{},"interfaces/FieldLocation.html":{},"controllers/FieldsController.html":{},"modules/FieldsModule.html":{},"classes/FieldsRepository.html":{},"classes/FieldsService.html":{},"interfaces/FilterParams.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IFieldsRepository.html":{},"interfaces/ILoggerRepository.html":{},"classes/LoggerRepository.html":{},"interfaces/PaginationParams.html":{},"injectables/PrismaService.html":{},"interfaces/SortParams.html":{}}}],["injectable",{"_index":171,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":172,"title":{},"body":{"injectables/PrismaService.html":{}}}],["installation",{"_index":226,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":229,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ApiResponse.html":{},"interfaces/Field.html":{},"interfaces/FieldLocation.html":{},"interfaces/FilterParams.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IFieldsRepository.html":{},"interfaces/ILoggerRepository.html":{},"interfaces/PaginationParams.html":{},"interfaces/SortParams.html":{}},"body":{"interfaces/ApiResponse.html":{},"interfaces/Field.html":{},"interfaces/FieldLocation.html":{},"interfaces/FilterParams.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IFieldsRepository.html":{},"interfaces/ILoggerRepository.html":{},"interfaces/PaginationParams.html":{},"interfaces/SortParams.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/Field.html":{},"interfaces/FieldLocation.html":{},"interfaces/FilterParams.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IFieldsRepository.html":{},"interfaces/ILoggerRepository.html":{},"interfaces/PaginationParams.html":{},"interfaces/SortParams.html":{},"overview.html":{}}}],["items",{"_index":10,"title":{},"body":{"interfaces/ApiResponse.html":{},"classes/BaseRepository.html":{},"interfaces/FilterParams.html":{},"interfaces/PaginationParams.html":{},"interfaces/SortParams.html":{}}}],["join",{"_index":256,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":264,"title":{},"body":{"index.html":{}}}],["key",{"_index":26,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/FilterParams.html":{},"interfaces/PaginationParams.html":{},"interfaces/SortParams.html":{}}}],["label",{"_index":90,"title":{},"body":{"interfaces/Field.html":{},"interfaces/FieldLocation.html":{}}}],["latitude",{"_index":94,"title":{},"body":{"interfaces/Field.html":{},"interfaces/FieldLocation.html":{}}}],["legend",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/FieldsModule.html":{},"overview.html":{}}}],["level",{"_index":168,"title":{},"body":{"classes/LoggerRepository.html":{}}}],["license",{"_index":270,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":246,"title":{},"body":{"index.html":{}}}],["literal",{"_index":145,"title":{},"body":{"interfaces/FilterParams.html":{},"interfaces/SortParams.html":{}}}],["location",{"_index":91,"title":{},"body":{"interfaces/Field.html":{},"interfaces/FieldLocation.html":{}}}],["logevent",{"_index":152,"title":{},"body":{"interfaces/ILoggerRepository.html":{},"classes/LoggerRepository.html":{}}}],["logevent(message",{"_index":154,"title":{},"body":{"interfaces/ILoggerRepository.html":{},"classes/LoggerRepository.html":{}}}],["logexception",{"_index":153,"title":{},"body":{"interfaces/ILoggerRepository.html":{},"classes/LoggerRepository.html":{}}}],["logexception(error",{"_index":159,"title":{},"body":{"interfaces/ILoggerRepository.html":{},"classes/LoggerRepository.html":{}}}],["loggerrepository",{"_index":162,"title":{"classes/LoggerRepository.html":{}},"body":{"classes/LoggerRepository.html":{},"coverage.html":{}}}],["longitude",{"_index":93,"title":{},"body":{"interfaces/Field.html":{},"interfaces/FieldLocation.html":{}}}],["matching",{"_index":29,"title":{},"body":{"interfaces/ApiResponse.html":{},"modules/AppModule.html":{},"classes/BaseRepository.html":{},"interfaces/Field.html":{},"interfaces/FieldLocation.html":{},"controllers/FieldsController.html":{},"modules/FieldsModule.html":{},"classes/FieldsRepository.html":{},"classes/FieldsService.html":{},"interfaces/FilterParams.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IFieldsRepository.html":{},"interfaces/ILoggerRepository.html":{},"classes/LoggerRepository.html":{},"interfaces/PaginationParams.html":{},"injectables/PrismaService.html":{},"interfaces/SortParams.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["message",{"_index":157,"title":{},"body":{"interfaces/ILoggerRepository.html":{},"classes/LoggerRepository.html":{}}}],["metadata",{"_index":205,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":56,"title":{},"body":{"classes/BaseRepository.html":{},"controllers/FieldsController.html":{},"classes/FieldsService.html":{},"interfaces/ILoggerRepository.html":{},"classes/LoggerRepository.html":{},"injectables/PrismaService.html":{}}}],["miscellaneous",{"_index":209,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":245,"title":{},"body":{"index.html":{}}}],["mode",{"_index":235,"title":{},"body":{"index.html":{}}}],["module",{"_index":30,"title":{"modules/AppModule.html":{},"modules/FieldsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FieldsModule.html":{},"overview.html":{}}}],["modules",{"_index":32,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/FieldsModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/fields/fields.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":259,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":265,"title":{},"body":{"index.html":{}}}],["name",{"_index":68,"title":{},"body":{"classes/BaseRepository.html":{},"classes/FieldsService.html":{},"interfaces/ILoggerRepository.html":{},"classes/LoggerRepository.html":{}}}],["nest",{"_index":223,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":269,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"controllers/FieldsController.html":{},"modules/FieldsModule.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":195,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":196,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":110,"title":{},"body":{"controllers/FieldsController.html":{},"dependencies.html":{}}}],["new",{"_index":190,"title":{},"body":{"coverage.html":{}}}],["node.js",{"_index":215,"title":{},"body":{"index.html":{}}}],["npm",{"_index":228,"title":{},"body":{"index.html":{}}}],["number",{"_index":11,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/Field.html":{},"interfaces/FieldLocation.html":{},"interfaces/FilterParams.html":{},"interfaces/PaginationParams.html":{},"interfaces/SortParams.html":{}}}],["onmoduleinit",{"_index":175,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":247,"title":{},"body":{"index.html":{}}}],["optional",{"_index":69,"title":{},"body":{"classes/BaseRepository.html":{},"classes/FieldsService.html":{},"interfaces/FilterParams.html":{},"interfaces/ILoggerRepository.html":{},"classes/LoggerRepository.html":{},"interfaces/SortParams.html":{}}}],["order",{"_index":23,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/FilterParams.html":{},"interfaces/PaginationParams.html":{},"interfaces/SortParams.html":{}}}],["out",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/FieldsModule.html":{},"overview.html":{}}}],["overview",{"_index":274,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":193,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":17,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/FilterParams.html":{},"interfaces/PaginationParams.html":{},"interfaces/SortParams.html":{}}}],["paginationparams",{"_index":16,"title":{"interfaces/PaginationParams.html":{}},"body":{"interfaces/ApiResponse.html":{},"interfaces/FilterParams.html":{},"interfaces/PaginationParams.html":{},"interfaces/SortParams.html":{},"coverage.html":{}}}],["parameters",{"_index":67,"title":{},"body":{"classes/BaseRepository.html":{},"classes/FieldsService.html":{},"interfaces/ILoggerRepository.html":{},"classes/LoggerRepository.html":{}}}],["params",{"_index":78,"title":{},"body":{"classes/BaseRepository.html":{},"classes/FieldsRepository.html":{},"classes/FieldsService.html":{},"interfaces/IBaseRepository.html":{}}}],["partial",{"_index":64,"title":{},"body":{"classes/BaseRepository.html":{},"classes/FieldsRepository.html":{},"interfaces/IBaseRepository.html":{}}}],["please",{"_index":257,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":99,"title":{},"body":{"controllers/FieldsController.html":{}}}],["prisma/client",{"_index":177,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":174,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaservice",{"_index":123,"title":{"injectables/PrismaService.html":{}},"body":{"modules/FieldsModule.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"overview.html":{}}}],["production",{"_index":237,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":214,"title":{},"body":{"index.html":{}}}],["project",{"_index":248,"title":{},"body":{"index.html":{}}}],["promise",{"_index":72,"title":{},"body":{"classes/BaseRepository.html":{},"controllers/FieldsController.html":{},"classes/FieldsRepository.html":{},"classes/FieldsService.html":{},"interfaces/IBaseRepository.html":{}}}],["promise.resolve",{"_index":88,"title":{},"body":{"classes/BaseRepository.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/ApiResponse.html":{},"interfaces/Field.html":{},"interfaces/FieldLocation.html":{},"classes/FieldsRepository.html":{},"interfaces/FilterParams.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ILoggerRepository.html":{},"classes/LoggerRepository.html":{},"interfaces/PaginationParams.html":{},"interfaces/SortParams.html":{},"properties.html":{}}}],["providers",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/FieldsModule.html":{},"overview.html":{}}}],["read",{"_index":258,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":118,"title":{},"body":{"controllers/FieldsController.html":{},"classes/FieldsService.html":{}}}],["record",{"_index":155,"title":{},"body":{"interfaces/ILoggerRepository.html":{},"classes/LoggerRepository.html":{}}}],["reflect",{"_index":204,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":141,"title":{},"body":{"classes/FieldsService.html":{},"index.html":{}}}],["requestparams",{"_index":27,"title":{},"body":{"interfaces/ApiResponse.html":{},"classes/BaseRepository.html":{},"classes/FieldsRepository.html":{},"classes/FieldsService.html":{},"interfaces/FilterParams.html":{},"interfaces/IBaseRepository.html":{},"interfaces/PaginationParams.html":{},"interfaces/SortParams.html":{},"miscellaneous/typealiases.html":{}}}],["reset",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/FieldsModule.html":{},"overview.html":{}}}],["results",{"_index":28,"title":{},"body":{"interfaces/ApiResponse.html":{},"modules/AppModule.html":{},"classes/BaseRepository.html":{},"interfaces/Field.html":{},"interfaces/FieldLocation.html":{},"controllers/FieldsController.html":{},"modules/FieldsModule.html":{},"classes/FieldsRepository.html":{},"classes/FieldsService.html":{},"interfaces/FilterParams.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IFieldsRepository.html":{},"interfaces/ILoggerRepository.html":{},"classes/LoggerRepository.html":{},"interfaces/PaginationParams.html":{},"injectables/PrismaService.html":{},"interfaces/SortParams.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":86,"title":{},"body":{"classes/BaseRepository.html":{},"controllers/FieldsController.html":{},"classes/FieldsService.html":{}}}],["returns",{"_index":71,"title":{},"body":{"classes/BaseRepository.html":{},"controllers/FieldsController.html":{},"classes/FieldsService.html":{},"interfaces/ILoggerRepository.html":{},"classes/LoggerRepository.html":{},"injectables/PrismaService.html":{}}}],["run",{"_index":232,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":207,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":219,"title":{},"body":{"index.html":{}}}],["server",{"_index":220,"title":{},"body":{"index.html":{}}}],["side",{"_index":221,"title":{},"body":{"index.html":{}}}],["size",{"_index":18,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/FilterParams.html":{},"interfaces/PaginationParams.html":{},"interfaces/SortParams.html":{}}}],["sort",{"_index":20,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/FilterParams.html":{},"interfaces/PaginationParams.html":{},"interfaces/SortParams.html":{}}}],["sortparams",{"_index":19,"title":{"interfaces/SortParams.html":{}},"body":{"interfaces/ApiResponse.html":{},"interfaces/FilterParams.html":{},"interfaces/PaginationParams.html":{},"interfaces/SortParams.html":{},"coverage.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ApiResponse.html":{},"modules/AppModule.html":{},"classes/BaseRepository.html":{},"interfaces/Field.html":{},"interfaces/FieldLocation.html":{},"controllers/FieldsController.html":{},"modules/FieldsModule.html":{},"classes/FieldsRepository.html":{},"classes/FieldsService.html":{},"interfaces/FilterParams.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IFieldsRepository.html":{},"interfaces/ILoggerRepository.html":{},"classes/LoggerRepository.html":{},"interfaces/PaginationParams.html":{},"injectables/PrismaService.html":{},"interfaces/SortParams.html":{},"index.html":{}}}],["sponsors",{"_index":251,"title":{},"body":{"index.html":{}}}],["src/.../api.ts",{"_index":284,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":211,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["src/domain/entities/api.ts",{"_index":6,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/FilterParams.html":{},"interfaces/PaginationParams.html":{},"interfaces/SortParams.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/domain/entities/field.ts",{"_index":89,"title":{},"body":{"interfaces/Field.html":{},"interfaces/FieldLocation.html":{},"coverage.html":{}}}],["src/domain/interfaces/fields/ifieldsrepository.ts",{"_index":148,"title":{},"body":{"interfaces/IFieldsRepository.html":{},"coverage.html":{}}}],["src/domain/interfaces/shared/ibaserepository.ts",{"_index":146,"title":{},"body":{"interfaces/IBaseRepository.html":{},"coverage.html":{}}}],["src/domain/interfaces/shared/iloggerrepository.ts",{"_index":151,"title":{},"body":{"interfaces/ILoggerRepository.html":{},"coverage.html":{}}}],["src/domain/interfaces/shared/iloggerrepository.ts:2",{"_index":156,"title":{},"body":{"interfaces/ILoggerRepository.html":{}}}],["src/domain/interfaces/shared/iloggerrepository.ts:3",{"_index":161,"title":{},"body":{"interfaces/ILoggerRepository.html":{}}}],["src/domain/services/fields/fieldsservice.ts",{"_index":137,"title":{},"body":{"classes/FieldsService.html":{},"coverage.html":{}}}],["src/domain/services/fields/fieldsservice.ts:5",{"_index":140,"title":{},"body":{"classes/FieldsService.html":{}}}],["src/domain/services/fields/fieldsservice.ts:8",{"_index":143,"title":{},"body":{"classes/FieldsService.html":{}}}],["src/domain/services/prisma/prismaservice.ts",{"_index":173,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/domain/services/prisma/prismaservice.ts:6",{"_index":176,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/infrastructure/repositories/fields/fieldsrepository.ts",{"_index":128,"title":{},"body":{"classes/FieldsRepository.html":{},"coverage.html":{}}}],["src/infrastructure/repositories/fields/fieldsrepository.ts:10",{"_index":132,"title":{},"body":{"classes/FieldsRepository.html":{}}}],["src/infrastructure/repositories/fields/fieldsrepository.ts:6",{"_index":133,"title":{},"body":{"classes/FieldsRepository.html":{}}}],["src/infrastructure/repositories/fields/fieldsrepository.ts:7",{"_index":134,"title":{},"body":{"classes/FieldsRepository.html":{}}}],["src/infrastructure/repositories/fields/fieldsrepository.ts:8",{"_index":131,"title":{},"body":{"classes/FieldsRepository.html":{}}}],["src/infrastructure/repositories/fields/fieldsrepository.ts:9",{"_index":135,"title":{},"body":{"classes/FieldsRepository.html":{}}}],["src/infrastructure/repositories/shared/baserepository.ts",{"_index":53,"title":{},"body":{"classes/BaseRepository.html":{},"coverage.html":{}}}],["src/infrastructure/repositories/shared/baserepository.ts:13",{"_index":66,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/infrastructure/repositories/shared/baserepository.ts:17",{"_index":83,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/infrastructure/repositories/shared/baserepository.ts:21",{"_index":74,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/infrastructure/repositories/shared/baserepository.ts:5",{"_index":77,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/infrastructure/repositories/shared/baserepository.ts:9",{"_index":81,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/infrastructure/repositories/shared/loggerrepository.ts",{"_index":163,"title":{},"body":{"classes/LoggerRepository.html":{},"coverage.html":{}}}],["src/infrastructure/repositories/shared/loggerrepository.ts:4",{"_index":164,"title":{},"body":{"classes/LoggerRepository.html":{}}}],["src/infrastructure/repositories/shared/loggerrepository.ts:8",{"_index":165,"title":{},"body":{"classes/LoggerRepository.html":{}}}],["src/main.ts",{"_index":189,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/fields/fields.controller.ts",{"_index":98,"title":{},"body":{"controllers/FieldsController.html":{},"coverage.html":{}}}],["src/modules/fields/fields.controller.ts:17",{"_index":103,"title":{},"body":{"controllers/FieldsController.html":{}}}],["src/modules/fields/fields.module.ts",{"_index":124,"title":{},"body":{"modules/FieldsModule.html":{}}}],["start",{"_index":233,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":236,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":238,"title":{},"body":{"index.html":{}}}],["started",{"_index":213,"title":{"index.html":{}},"body":{}}],["starter",{"_index":225,"title":{},"body":{"index.html":{}}}],["statements",{"_index":182,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":112,"title":{},"body":{"controllers/FieldsController.html":{}}}],["stay",{"_index":261,"title":{},"body":{"index.html":{}}}],["string",{"_index":22,"title":{},"body":{"interfaces/ApiResponse.html":{},"classes/BaseRepository.html":{},"interfaces/Field.html":{},"interfaces/FieldLocation.html":{},"classes/FieldsRepository.html":{},"interfaces/FilterParams.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ILoggerRepository.html":{},"classes/LoggerRepository.html":{},"interfaces/PaginationParams.html":{},"interfaces/SortParams.html":{}}}],["success",{"_index":115,"title":{},"body":{"controllers/FieldsController.html":{}}}],["support",{"_index":252,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":272,"title":{},"body":{"modules.html":{}}}],["t",{"_index":14,"title":{},"body":{"interfaces/ApiResponse.html":{},"classes/BaseRepository.html":{},"interfaces/FilterParams.html":{},"interfaces/PaginationParams.html":{},"interfaces/SortParams.html":{}}}],["table",{"_index":192,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":191,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":241,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":244,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":243,"title":{},"body":{"index.html":{}}}],["tests",{"_index":240,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":250,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":178,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.fieldsservice.getavailablefields",{"_index":120,"title":{},"body":{"controllers/FieldsController.html":{}}}],["this.repository.getall",{"_index":144,"title":{},"body":{"classes/FieldsService.html":{}}}],["touch",{"_index":262,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":200,"title":{},"body":{"dependencies.html":{}}}],["twitter",{"_index":268,"title":{},"body":{"index.html":{}}}],["type",{"_index":12,"title":{},"body":{"interfaces/ApiResponse.html":{},"classes/BaseRepository.html":{},"interfaces/Field.html":{},"interfaces/FieldLocation.html":{},"controllers/FieldsController.html":{},"classes/FieldsRepository.html":{},"classes/FieldsService.html":{},"interfaces/FilterParams.html":{},"interfaces/IBaseRepository.html":{},"interfaces/ILoggerRepository.html":{},"classes/LoggerRepository.html":{},"interfaces/PaginationParams.html":{},"interfaces/SortParams.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":282,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":224,"title":{},"body":{"index.html":{}}}],["unit",{"_index":239,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":281,"title":{},"body":{"properties.html":{}}}],["update",{"_index":62,"title":{},"body":{"classes/BaseRepository.html":{},"classes/FieldsRepository.html":{},"interfaces/IBaseRepository.html":{}}}],["update(id",{"_index":82,"title":{},"body":{"classes/BaseRepository.html":{}}}],["validator",{"_index":202,"title":{},"body":{"dependencies.html":{}}}],["version",{"_index":279,"title":{},"body":{"properties.html":{}}}],["void",{"_index":158,"title":{},"body":{"interfaces/ILoggerRepository.html":{},"classes/LoggerRepository.html":{}}}],["watch",{"_index":234,"title":{},"body":{"index.html":{}}}],["website",{"_index":266,"title":{},"body":{"index.html":{}}}],["yes",{"_index":79,"title":{},"body":{"classes/BaseRepository.html":{},"classes/FieldsService.html":{}}}],["you'd",{"_index":255,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/FieldsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ApiResponse.html":{"url":"interfaces/ApiResponse.html","title":"interface - ApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/entities/Api.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            items\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiResponse {\n  items: T[]\n  count: number\n}\n\nexport interface PaginationParams {\n  page: number\n  size: number\n}\n\nexport interface SortParams {\n  sort?: {\n    field: string\n    order: number\n  }\n}\n\nexport interface FilterParams {\n  filters?: {\n    [key: string]: any\n  }\n}\n\nexport type RequestParams = PaginationParams & SortParams & FilterParams\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nFieldsModule\n\nFieldsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nFieldsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            FieldsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FieldsModule } from './modules/fields/fields.module';\n\n@Module({\n  imports: [\n    FieldsModule\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseRepository.html":{"url":"classes/BaseRepository.html","title":"class - BaseRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/repositories/shared/BaseRepository.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IBaseRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infrastructure/repositories/shared/BaseRepository.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infrastructure/repositories/shared/BaseRepository.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(params?: RequestParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infrastructure/repositories/shared/BaseRepository.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            RequestParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infrastructure/repositories/shared/BaseRepository.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infrastructure/repositories/shared/BaseRepository.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { ApiResponse, RequestParams } from '@domain/entities/Api'\nimport type { IBaseRepository } from '@domain/interfaces/shared/IBaseRepository'\n\nexport class BaseRepository implements IBaseRepository {\n  async getAll(params?: RequestParams): Promise> {\n    return { items: [], count: 100 }\n  }\n\n  async getById(id: string): Promise {\n    return Promise.resolve({} as T)\n  }\n\n  async create(data: Partial): Promise {\n    return Promise.resolve({} as T)\n  }\n\n  async update(id: string, data: Partial): Promise {\n    return Promise.resolve({} as T)\n  }\n\n  async delete(id: string): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Field.html":{"url":"interfaces/Field.html","title":"interface - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Field\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/entities/Field.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            location\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:         FieldLocation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FieldLocation\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Field {\n  id: string,\n  label: string,\n  location: FieldLocation\n  // ....\n}\n\nexport interface FieldLocation {\n  id: string,\n  longitude: number\n  latitude: number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FieldLocation.html":{"url":"interfaces/FieldLocation.html","title":"interface - FieldLocation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FieldLocation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/entities/Field.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            latitude\n                                        \n                                \n                                \n                                        \n                                            longitude\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Field {\n  id: string,\n  label: string,\n  location: FieldLocation\n  // ....\n}\n\nexport interface FieldLocation {\n  id: string,\n  longitude: number\n  latitude: number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FieldsController.html":{"url":"controllers/FieldsController.html","title":"controller - FieldsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FieldsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/fields/fields.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                fields\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getAvailableFields\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAvailableFields\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAvailableFields()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/fields/fields.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise>\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpStatus } from '@nestjs/common';\nimport type { ApiResponse } from '@domain/entities/Api';\nimport type { Field } from '@domain/entities/Field';\nimport { FieldsService } from '@domain/services/fields/FieldsService';\nimport { ApiResponse as ApiResponseSwagger, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Fields')\n@ApiResponseSwagger({\n  status: HttpStatus.OK,\n  description: 'Success',\n})\n@Controller('fields')\nexport class FieldsController {\n  constructor(private readonly fieldsService: FieldsService) {}\n\n  @Get()\n  async getAvailableFields(): Promise> {\n    return await this.fieldsService.getAvailableFields();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FieldsModule.html":{"url":"modules/FieldsModule.html","title":"module - FieldsModule","body":"\n                   \n\n\n\n\n    Modules\n    FieldsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FieldsModule\n\n\n\ncluster_FieldsModule_providers\n\n\n\n\nPrismaService\n\nPrismaService\n\n\n\nFieldsModule\n\nFieldsModule\n\nFieldsModule -->\n\nPrismaService->FieldsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/fields/fields.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FieldsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FieldsController } from './fields.controller';\nimport { FieldsService } from '@domain/services/fields/FieldsService';\nimport { PrismaService } from '@domain/services/prisma/PrismaService';\n\n@Module({\n  imports: [],\n  controllers: [FieldsController],\n  providers: [FieldsService, PrismaService],\n})\nexport class FieldsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldsRepository.html":{"url":"classes/FieldsRepository.html","title":"class - FieldsRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldsRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/repositories/fields/FieldsRepository.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IFieldsRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/repositories/fields/FieldsRepository.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/repositories/fields/FieldsRepository.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/repositories/fields/FieldsRepository.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/repositories/fields/FieldsRepository.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/repositories/fields/FieldsRepository.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RequestParams, ApiResponse } from '@domain/entities/Api';\nimport { Field } from '@domain/entities/Field';\nimport { IFieldsRepository } from '@domain/interfaces/fields/IFieldsRepository';\n\nexport class FieldsRepository implements IFieldsRepository {\n  getAll: (params?: RequestParams) => Promise>;\n  getById: (id: string) => Promise;\n  create: (data: Partial) => Promise;\n  update: (id: string, data: Partial) => Promise;\n  delete: (id: string) => Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldsService.html":{"url":"classes/FieldsService.html","title":"class - FieldsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/services/fields/FieldsService.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAvailableFields\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: IFieldsRepository)\n                    \n                \n                        \n                            \n                                Defined in src/domain/services/fields/FieldsService.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        IFieldsRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAvailableFields\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAvailableFields(params?: RequestParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/services/fields/FieldsService.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            RequestParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IFieldsRepository } from '@domain/interfaces/fields/IFieldsRepository';\nimport type { ApiResponse, RequestParams } from '@domain/entities/Api';\nimport { Field } from '@domain/entities/Field';\n\nexport class FieldsService {\n  constructor(private readonly repository: IFieldsRepository) {}\n\n  async getAvailableFields(\n    params?: RequestParams,\n  ): Promise> {\n    return await this.repository.getAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterParams.html":{"url":"interfaces/FilterParams.html","title":"interface - FilterParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/entities/Api.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            filters\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filters:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiResponse {\n  items: T[]\n  count: number\n}\n\nexport interface PaginationParams {\n  page: number\n  size: number\n}\n\nexport interface SortParams {\n  sort?: {\n    field: string\n    order: number\n  }\n}\n\nexport interface FilterParams {\n  filters?: {\n    [key: string]: any\n  }\n}\n\nexport type RequestParams = PaginationParams & SortParams & FilterParams\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseRepository.html":{"url":"interfaces/IBaseRepository.html","title":"interface - IBaseRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBaseRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/interfaces/shared/IBaseRepository.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            create\n                                        \n                                \n                                \n                                        \n                                            delete\n                                        \n                                \n                                \n                                        \n                                            getAll\n                                        \n                                \n                                \n                                        \n                                            getById\n                                        \n                                \n                                \n                                        \n                                            update\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        create:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delete:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getAll\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getAll:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getById\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getById:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        update:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiResponse, RequestParams } from '../../entities/Api';\n\nexport interface IBaseRepository {\n  getAll: (params?: RequestParams) => Promise>\n  getById: (id: string) => Promise\n  create: (data: Partial) => Promise\n  update: (id: string, data: Partial) => Promise\n  delete: (id: string) => Promise\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFieldsRepository.html":{"url":"interfaces/IFieldsRepository.html","title":"interface - IFieldsRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFieldsRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/interfaces/fields/IFieldsRepository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseRepository\n            \n\n\n\n\n    \n\n\n    \n        import { Field } from '@domain/entities/Field';\nimport { IBaseRepository } from '@domain/interfaces/shared/IBaseRepository';\n\nexport interface IFieldsRepository extends IBaseRepository {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILoggerRepository.html":{"url":"interfaces/ILoggerRepository.html","title":"interface - ILoggerRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILoggerRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/interfaces/shared/ILoggerRepository.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        logEvent\n                                    \n                                \n                                \n                                    \n                                        logException\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logEvent\n                        \n                    \n                \n            \n            \n                \nlogEvent(message: string, properties: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/interfaces/shared/ILoggerRepository.ts:2\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                properties\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logException\n                        \n                    \n                \n            \n            \n                \nlogException(error: Error, properties: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/interfaces/shared/ILoggerRepository.ts:3\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                properties\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ILoggerRepository {\n    logEvent(message: string, properties: Record): void;\n    logException(error: Error, properties: Record): void;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoggerRepository.html":{"url":"classes/LoggerRepository.html","title":"class - LoggerRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoggerRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/repositories/shared/LoggerRepository.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ILoggerRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logEvent\n                            \n                            \n                                logException\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logEvent\n                        \n                    \n                \n            \n            \n                \nlogEvent(message: string, properties: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infrastructure/repositories/shared/LoggerRepository.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                properties\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logException\n                        \n                    \n                \n            \n            \n                \nlogException(error: Error, properties: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infrastructure/repositories/shared/LoggerRepository.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                properties\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ILoggerRepository } from '../../../domain/interfaces/shared/ILoggerRepository';\n\nexport class LoggerRepository implements ILoggerRepository {\n    logEvent(message: string, properties: Record): void {\n        console.log({ level: 'Debug', message, properties })\n    }\n\n    logException(error: Error, properties: Record): void {\n        console.error({ level: 'Error', error, properties })\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationParams.html":{"url":"interfaces/PaginationParams.html","title":"interface - PaginationParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginationParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/entities/Api.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiResponse {\n  items: T[]\n  count: number\n}\n\nexport interface PaginationParams {\n  page: number\n  size: number\n}\n\nexport interface SortParams {\n  sort?: {\n    field: string\n    order: number\n  }\n}\n\nexport interface FilterParams {\n  filters?: {\n    [key: string]: any\n  }\n}\n\nexport type RequestParams = PaginationParams & SortParams & FilterParams\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/services/prisma/PrismaService.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/domain/services/prisma/PrismaService.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SortParams.html":{"url":"interfaces/SortParams.html","title":"interface - SortParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SortParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/entities/Api.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            sort\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sort:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiResponse {\n  items: T[]\n  count: number\n}\n\nexport interface PaginationParams {\n  page: number\n  size: number\n}\n\nexport interface SortParams {\n  sort?: {\n    field: string\n    order: number\n  }\n}\n\nexport interface FilterParams {\n  filters?: {\n    [key: string]: any\n  }\n}\n\nexport type RequestParams = PaginationParams & SortParams & FilterParams\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/domain/entities/Api.ts\n            \n            interface\n            ApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain/entities/Api.ts\n            \n            interface\n            FilterParams\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/domain/entities/Api.ts\n            \n            interface\n            PaginationParams\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain/entities/Api.ts\n            \n            interface\n            SortParams\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/domain/entities/Field.ts\n            \n            interface\n            Field\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/domain/entities/Field.ts\n            \n            interface\n            FieldLocation\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/domain/interfaces/fields/IFieldsRepository.ts\n            \n            interface\n            IFieldsRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/domain/interfaces/shared/IBaseRepository.ts\n            \n            interface\n            IBaseRepository\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/domain/interfaces/shared/ILoggerRepository.ts\n            \n            interface\n            ILoggerRepository\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain/services/fields/FieldsService.ts\n            \n            class\n            FieldsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain/services/prisma/PrismaService.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infrastructure/repositories/fields/FieldsRepository.ts\n            \n            class\n            FieldsRepository\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/infrastructure/repositories/shared/BaseRepository.ts\n            \n            class\n            BaseRepository\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/infrastructure/repositories/shared/LoggerRepository.ts\n            \n            class\n            LoggerRepository\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/fields/fields.controller.ts\n            \n            controller\n            FieldsController\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.3.0\n        \n            @prisma/client : ^5.10.2\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FieldsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_FieldsModule\n\n\n\ncluster_FieldsModule_providers\n\n\n\n\nFieldsModule\n\nFieldsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nFieldsModule->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nFieldsModule -->\n\nPrismaService->FieldsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RequestParams   (src/.../Api.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/domain/entities/Api.ts\n    \n    \n        \n            \n                \n                    \n                    RequestParams\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
